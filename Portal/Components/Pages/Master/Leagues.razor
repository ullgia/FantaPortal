@page "/master/leagues"
@attribute [Authorize(Roles = "Master")]

<PageTitle>Gestione Leghe - Master</PageTitle>

<RadzenRow Gap="2rem" Class="rz-p-4">
    <RadzenColumn Size="12">
        <RadzenCard>
            <RadzenStack>
                <RadzenText TextStyle="TextStyle.H3" TagName="TagName.H1">
                    üèÜ Gestione Leghe
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Subtitle1" class="rz-color-secondary">
                    Crea nuove leghe o gestisci quelle esistenti
                </RadzenText>
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<RadzenRow Gap="2rem" Class="rz-p-4">
    <RadzenColumn Size="12" SizeMD="4">
        <RadzenCard Style="height: 200px;">
            <RadzenStack JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Style="height: 100%;">
                <RadzenIcon Icon="add_circle" Style="font-size: 4rem; color: #28a745;" />
                <RadzenText TextStyle="TextStyle.H6">Crea Nuova Lega</RadzenText>
                <RadzenButton 
                    Text="Crea" 
                    ButtonStyle="ButtonStyle.Success" 
                    Icon="add"
                    Click="@CreateNewLeague" />
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Size="12" SizeMD="8">
        <RadzenCard>
            <RadzenStack>
                <RadzenText TextStyle="TextStyle.H5">Leghe Esistenti</RadzenText>
                
                @if (leagues == null)
                {
                    <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
                }
                else if (!leagues.Any())
                {
                    <RadzenAlert AlertStyle="AlertStyle.Info" ShowIcon="true">
                        <RadzenText>Nessuna lega trovata. Crea la tua prima lega!</RadzenText>
                    </RadzenAlert>
                }
                else
                {
                    <RadzenDataGrid Data="@leagues" TItem="League" AllowFiltering="true" AllowPaging="true" PageSize="10">
                        <Columns>
                            <RadzenDataGridColumn TItem="League" Property="Name" Title="Nome Lega" />
                            <RadzenDataGridColumn TItem="League" Property="ParticipantCount" Title="Partecipanti" />
                            <RadzenDataGridColumn TItem="League" Property="Budget" Title="Budget" />
                            <RadzenDataGridColumn TItem="League" Property="CreatedAt" Title="Creata il" FormatString="{0:dd/MM/yyyy}" />
                            <RadzenDataGridColumn TItem="League" Title="Azioni" Sortable="false" Filterable="false">
                                <Template Context="league">
                                    <RadzenButton Icon="settings" 
                                                ButtonStyle="ButtonStyle.Primary" 
                                                Size="ButtonSize.Small"
                                                Text="Gestisci"
                                                Click="@(() => NavigateToLeague(league.Id))" />
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                }
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

@code {
    [Inject] NavigationManager Navigation { get; set; } = default!;
    
    private List<League>? leagues;

    protected override async Task OnInitializedAsync()
    {
        await LoadLeagues();
    }

    private async Task LoadLeagues()
    {
        // TODO: Implementare chiamata al servizio per caricare le leghe
        await Task.Delay(1000); // Simulazione caricamento
        leagues = new List<League>(); // Placeholder
    }

    private void CreateNewLeague()
    {
        Navigation.NavigateTo("/master/leagues/create");
    }

    private void NavigateToLeague(Guid leagueId)
    {
        Navigation.NavigateTo($"/master/leagues/{leagueId}");
    }

    // Classe temporanea, sostituire con quella del Domain
    private class League
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = "";
        public int ParticipantCount { get; set; }
        public decimal Budget { get; set; }
        public DateTime CreatedAt { get; set; }
    }
}
