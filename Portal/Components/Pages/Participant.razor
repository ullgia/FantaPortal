@page "/app/partecipante/{leagueId:guid}/{sessionId:guid}"
@using Radzen
@using Portal.Components.Shared
@inject NotificationService Notifications
@inject AuctionRealtimeStore Store

<PageTitle>Partecipante</PageTitle>

<div class="container">
    <h3>Partecipazione Asta</h3>
    <p>Lega: @leagueId</p>
    <p>Sessione: @sessionId</p>
    <div class="row g-3">
        <div class="col-12 col-md-6">
            <TimerPanel Title="Timer Offerte" RemainingSeconds="@_remainingSeconds" LastWarningSeconds="@Store.LastWarning" />
            <RadzenCard Class="mt-2">
                <ChildContent>
                    <div class="text-muted">Ultimo evento</div>
                    <div class="fw-bold">@Store.LastEvent</div>
                    @if (Store.HighestBid is not null)
                    {
                        <div class="mt-2">
                            <span class="text-muted">Offerta corrente:</span>
                            <span class="ms-1">@Store.HighestBid?.Amount crediti</span>
                        </div>
                    }
                </ChildContent>
            </RadzenCard>
        </div>
        <div class="col-12 col-md-6">
            <RadzenCard>
                <ChildContent>
                    <div class="text-muted">Giocatore corrente</div>
                    <div class="fw-bold">@(Store.CurrentPlayerId?.ToString() ?? "-")</div>
                    <div class="text-muted mt-2">Ruolo</div>
                    <div class="fw-bold">@(Store.CurrentRole ?? "-")</div>
                    @if (_teamId is Guid me2 && Store.NominatorTeamId == me2 && !Store.IsReadyPhase && !Store.IsBiddingPhase)
                    {
                        <div class="alert alert-info mt-3">E' il tuo turno di nominare.</div>
                        <NominationControls SessionId="@sessionId" TeamId="@me2" />
                    }
                    @if (_teamId is Guid me && Store.IsReadyPhase && Store.EligibleOtherTeamIds is Guid[] elig && elig.Contains(me))
                    {
                        <div class="mt-3">
                            <RadzenButton Text="Sono pronto" Icon="done" ButtonStyle="ButtonStyle.Success" Click="@(() => Store.MarkReadyAsync(me))" />
                        </div>
                    }
                </ChildContent>
            </RadzenCard>
            @if (_teamId is Guid team)
            {
                <BidControls SessionId="@sessionId" TeamId="@team" CurrentAmount="@Store.HighestBid?.Amount" />
            }
        </div>
    </div>
    <RadzenNotification />
    <RadzenTooltip />
    <RadzenDialog />
    <RadzenContextMenu />
</div>

@code {
    [Parameter] public Guid leagueId { get; set; }
    [Parameter] public Guid sessionId { get; set; }
    [CascadingParameter] private HttpContext Http { get; set; } = default!;
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    private int _remainingSeconds;
    private bool _timerRunning;
    private Guid? _teamId;

    protected override async Task OnInitializedAsync()
    {
        var cookie = Http.Request.Cookies[Portal.Auth.MagicGrantCookie.CookieName];
        var grant = Portal.Auth.MagicGrantCookie.Decode(cookie);
        if (grant is null || grant.LeagueId != leagueId || grant.SessionId != sessionId || grant.IsGuest)
        {
            NavigationManager.NavigateTo("/Error");
            return;
        }

    _teamId = grant.TeamId;
    Store.StateChanged += OnStateChanged;
        Store.Warning += OnWarning;
    // Partecipante segue la sessione per ricevere eventi di bidding/ready
    await Store.StartSessionAsync(sessionId);
    }

    private void OnStateChanged()
    {
        _remainingSeconds = Store.RemainingSeconds;
        _timerRunning = _remainingSeconds > 0;
        InvokeAsync(StateHasChanged);
    }

    private void OnWarning(int seconds)
        => Notifications.Notify(new NotificationMessage
        {
            Severity = NotificationSeverity.Warning,
            Summary = "Timer in scadenza",
            Detail = $"Mancano {seconds}s",
            Duration = 2000
        });
}
