@page "/Account/Login"
@layout Layout.AccountAuthLayout

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Domain.Entities

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Accedi - FantaAsta</PageTitle>

<RadzenStack Gap="1.25rem">
    <RadzenStack Gap="0.5rem" AlignItems="AlignItems.Center">
        <RadzenIcon Icon="sports_soccer" Style="font-size:3rem;color:#667eea;" />
        <div class="auth-title">FantaAsta</div>
        <div class="auth-subtitle">Accedi per continuare</div>
    </RadzenStack>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="true">@errorMessage</RadzenAlert>
    }

    <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
        <DataAnnotationsValidator />
        <RadzenStack Gap="1rem">
            <RadzenFormField Text="Email" Variant="Variant.Outlined">
                <RadzenTextBox @bind-Value="Input.Email" Placeholder="Email" Style="width:100%;" />
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </RadzenFormField>
            <RadzenFormField Text="Password" Variant="Variant.Outlined">
                <RadzenPassword @bind-Value="Input.Password" Placeholder="Password" Style="width:100%;" />
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </RadzenFormField>
            <RadzenCheckBox @bind-Value="Input.RememberMe" Name="rememberMe" />
            <RadzenLabel Text="Ricordami" Component="rememberMe" Style="margin-left:8px;" />
            <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Style="width:100%;margin-top:0.5rem;" Text="Accedi" Icon="login" />
        </RadzenStack>
    </EditForm>

    <div class="auth-footer-links">
        <a href="Account/Register">Registrati</a>
        <a href="Account/ForgotPassword">Password dimenticata?</a>
    </div>
</RadzenStack>

@code {
    private string? errorMessage;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();
    [SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            errorMessage = "Account bloccato temporaneamente.";
        }
        else
        {
            errorMessage = "Credenziali non valide.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        public bool RememberMe { get; set; }
    }
}
