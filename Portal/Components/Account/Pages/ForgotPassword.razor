@page "/Account/ForgotPassword"
@layout Layout.AccountAuthLayout

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Domain.Entities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Password dimenticata</PageTitle>

<RadzenStack Gap="1.25rem">
    <div class="auth-title">Recupero Password</div>
    <div class="auth-subtitle">Inserisci la tua email, se esiste ti invieremo il link.</div>

    <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
        <DataAnnotationsValidator />
        <RadzenStack Gap="1rem">
            <RadzenFormField Text="Email" Variant="Variant.Outlined">
                <RadzenTextBox @bind-Value="Input.Email" Placeholder="Email" Style="width:100%;" />
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </RadzenFormField>
            <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Style="width:100%;" Text="Invia link reset" Icon="mail" />
        </RadzenStack>
    </EditForm>

    <div class="auth-footer-links">
        <a href="Account/Login">Torna al login</a>
    </div>
</RadzenStack>

@code {
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));
        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
